//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Host2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWCFSiplex")]
    public interface IWCFSiplex {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/GetData", ReplyAction="http://tempuri.org/IWCFSiplex/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/GetData", ReplyAction="http://tempuri.org/IWCFSiplex/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IWCFSiplex/GetDataUsingDataContractResponse")]
        WCFServiceLab5.CompositeType GetDataUsingDataContract(WCFServiceLab5.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IWCFSiplex/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WCFServiceLab5.CompositeType> GetDataUsingDataContractAsync(WCFServiceLab5.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Add", ReplyAction="http://tempuri.org/IWCFSiplex/AddResponse")]
        int Add(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Add", ReplyAction="http://tempuri.org/IWCFSiplex/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Concat", ReplyAction="http://tempuri.org/IWCFSiplex/ConcatResponse")]
        string Concat(string x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Concat", ReplyAction="http://tempuri.org/IWCFSiplex/ConcatResponse")]
        System.Threading.Tasks.Task<string> ConcatAsync(string x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Sum", ReplyAction="http://tempuri.org/IWCFSiplex/SumResponse")]
        Infrastructure.Model.Lab4.A Sum(Infrastructure.Model.Lab4.A x, Infrastructure.Model.Lab4.A y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Sum", ReplyAction="http://tempuri.org/IWCFSiplex/SumResponse")]
        System.Threading.Tasks.Task<Infrastructure.Model.Lab4.A> SumAsync(Infrastructure.Model.Lab4.A x, Infrastructure.Model.Lab4.A y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFSiplexChannel : Host2.ServiceReference1.IWCFSiplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFSiplexClient : System.ServiceModel.ClientBase<Host2.ServiceReference1.IWCFSiplex>, Host2.ServiceReference1.IWCFSiplex {
        
        public WCFSiplexClient() {
        }
        
        public WCFSiplexClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFSiplexClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFSiplexClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFSiplexClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFServiceLab5.CompositeType GetDataUsingDataContract(WCFServiceLab5.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WCFServiceLab5.CompositeType> GetDataUsingDataContractAsync(WCFServiceLab5.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int Add(int x, int y) {
            return base.Channel.Add(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int x, int y) {
            return base.Channel.AddAsync(x, y);
        }
        
        public string Concat(string x, double y) {
            return base.Channel.Concat(x, y);
        }
        
        public System.Threading.Tasks.Task<string> ConcatAsync(string x, double y) {
            return base.Channel.ConcatAsync(x, y);
        }
        
        public Infrastructure.Model.Lab4.A Sum(Infrastructure.Model.Lab4.A x, Infrastructure.Model.Lab4.A y) {
            return base.Channel.Sum(x, y);
        }
        
        public System.Threading.Tasks.Task<Infrastructure.Model.Lab4.A> SumAsync(Infrastructure.Model.Lab4.A x, Infrastructure.Model.Lab4.A y) {
            return base.Channel.SumAsync(x, y);
        }
    }
}
